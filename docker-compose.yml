version: '3.8'

services:
    zookeeper-service:
        image: bitnami/zookeeper:3.7
        container_name: zookeeper-service
        ports:
            - "2181:2181"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - poc-kafka-network
    kafka-service:
        image: bitnami/kafka:2
        container_name: kafka-service
        ports:
            - "9093:9093"
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-service:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-service:9092,EXTERNAL://localhost:9093
            - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
        networks:
            - poc-kafka-network
        depends_on:
            - zookeeper-service
#    api-service:
#        build:
#            context: ./
#            dockerfile: ./api/Dockerfile
#        image: api-service:latest
#        container_name: api-service
#        working_dir: /app
#        ports:
#            - "8080:8080"
#        healthcheck:
#            test: "wget -nv -q http://localhost:8080/actuator/health -O - | grep UP || exit 1"
#            interval: 10s
#            timeout: 15s
#            retries: 15
#            start_period: 15s
#        depends_on:
#            - kafka-service
#    worker-service:
#        build:
#            context: ./
#            dockerfile: ./worker/Dockerfile
#        image: worker-service:latest
#        container_name: worker-service
#        working_dir: /app
#        depends_on:
#            - kafka-service

networks:
    poc-kafka-network:
        name: poc-kafka-network
        driver: bridge